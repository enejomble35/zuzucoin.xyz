/* =========================
   CONFIG
========================= */
const CONFIG = {
  // Countdown (persist)
  launchKey: "zuzu_launchAt",
  defaultLaunchISO: "2025-12-31T23:59:59Z",

  weekPrices: [0.0050, 0.0065, 0.0080, 0.0100], // USDT
  nfts: Array.from({ length: 10 }).map((_, i) => ({
    id: i, name: `ZUZU #${i + 1}`, rarity: i % 5 === 0 ? 'Legendary' : (i % 2 ? 'Rare' : 'Epic')
  })),

  // Solana config
  cluster: "mainnet", // "mainnet" | "devnet"
  treasury: "FILL_TREASURY_SOL_ADDRESS", // !!! BURAYA ZUZU HAZƒ∞NE ADRESƒ∞Nƒ∞ YAZ !!!
  // Ref / session keys
  LS_ADDR: "zuzu_connected_addr",
  LS_WALLET: "zuzu_connected_wallet",
  LS_LANG: "zuzu_lang"
};

/* =========================
   i18n (EN/TR/FR/PT/RU/ES)
========================= */
const I = {
  en:{nav_presale:"Pre-Sale",nav_stake:"Stake",nav_nft:"NFT Rewards",nav_roadmap:"Roadmap",nav_token:"Tokenomics",connect:"Connect Wallet",
      hero_badge:"Pre-Sale ‚Ä¢ Stake to Win NFT",hero_title:"ZUZU ‚Äî Robotic Hedgehog ü¶î‚ö°",
      hero_lead:"Stake and win <b>ZUZU Maskot NFT</b>. Limited supply, high <b>utility</b>.",
      cta_stake:"Start Staking",cta_nft:"NFT Rewards",days:"DAYS",hours:"HOURS",mins:"MINUTES",secs:"SECONDS",
      presale_title:"Pre-Sale ‚Äî Countdown",presale_lead:"Get ready for ZUZU pre-sale! <b>Limited allocation</b>, community price.",
      amount:"Amount (ZUZU)",cost:"Cost:",buy:"Buy",exchanges:"Supported Exchanges",
      stake_title:"Stake Pro ‚Äî Lock, Earn, Get NFT ‚ú®",stake_lead:"Lock your ZUZU, earn <b>APY + NFT BOOST</b>.",
      token_title:"Tokenomics (Visualized)",road_title:"Roadmap"},
  tr:{nav_presale:"√ñn Satƒ±≈ü",nav_stake:"Stake",nav_nft:"NFT √ñd√ºlleri",nav_roadmap:"Yol Haritasƒ±",nav_token:"Tokonomi",connect:"C√ºzdan Baƒüla",
      hero_badge:"√ñn Satƒ±≈ü ‚Ä¢ Stake ile NFT Kazan",hero_title:"ZUZU ‚Äî Geleceƒüin Robotic Kirpisi ü¶î‚ö°",
      hero_lead:"Stake et ve <b>ZUZU Maskot NFT</b> kazan. Sƒ±nƒ±rlƒ± arz, y√ºksek <b>utility</b>.",
      cta_stake:"Stake Etmeye Ba≈üla",cta_nft:"NFT √ñd√ºlleri",days:"G√úN",hours:"SAAT",mins:"DAKƒ∞KA",secs:"SANƒ∞YE",
      presale_title:"√ñn Satƒ±≈ü ‚Äî Geri Sayƒ±m",presale_lead:"ZUZU √∂n satƒ±≈üƒ±na hazƒ±r ol! <b>Sƒ±nƒ±rlƒ± tahsis</b>, topluluƒüa √∂zel fiyat.",
      amount:"Miktar (ZUZU)",cost:"Maliyet:",buy:"Satƒ±n Al",exchanges:"Desteklenen Borsalar",
      stake_title:"Stake Pro ‚Äî Kilitle, Kazan, NFT Kap ‚ú®",stake_lead:"ZUZU‚Äôlarƒ±nƒ± kilitle, <b>APY + NFT BOOST</b> ile kazan.",
      token_title:"Tokonomi (G√∂rsel)",road_title:"Yol Haritasƒ±"},
  fr:{nav_presale:"Pr√©-vente",nav_stake:"Stake",nav_nft:"R√©compenses NFT",nav_roadmap:"Feuille de route",nav_token:"Tokenomics",connect:"Connecter le Wallet",
      hero_badge:"Pr√©-vente ‚Ä¢ Stake pour gagner un NFT",hero_title:"ZUZU ‚Äî H√©risson Robotique ü¶î‚ö°",
      hero_lead:"Stake et gagne un <b>NFT Mascotte ZUZU</b>.",cta_stake:"Commencer le Stake",cta_nft:"R√©compenses NFT",
      days:"JOURS",hours:"HEURES",mins:"MINUTES",secs:"SECONDES",
      presale_title:"Pr√©-vente ‚Äî Compte √† rebours",presale_lead:"Pr√©pare-toi pour la pr√©-vente ZUZU ! <b>Allocation limit√©e</b>.",
      amount:"Montant (ZUZU)",cost:"Co√ªt :",buy:"Acheter",exchanges:"Bourses prises en charge",
      stake_title:"Stake Pro ‚Äî Verrouille, Gagne, Re√ßois un NFT ‚ú®",stake_lead:"Verrouille ton ZUZU et gagne <b>APY + BOOST NFT</b>.",
      token_title:"Tokenomics (Visualis√©)",road_title:"Feuille de route"},
  pt:{nav_presale:"Pr√©-venda",nav_stake:"Stake",nav_nft:"Recompensas NFT",nav_roadmap:"Roteiro",nav_token:"Tokenomics",connect:"Conectar Carteira",
      hero_badge:"Pr√©-venda ‚Ä¢ Stake para ganhar NFT",hero_title:"ZUZU ‚Äî Ouri√ßo Rob√≥tico ü¶î‚ö°",
      hero_lead:"Fa√ßa stake e ganhe <b>NFT Mascote ZUZU</b>.",cta_stake:"Come√ßar Stake",cta_nft:"Recompensas NFT",
      days:"DIAS",hours:"HORAS",mins:"MINUTOS",secs:"SEGUNDOS",
      presale_title:"Pr√©-venda ‚Äî Contagem regressiva",presale_lead:"Prepare-se para a pr√©-venda ZUZU! <b>Aloca√ß√£o limitada</b>.",
      amount:"Quantidade (ZUZU)",cost:"Custo:",buy:"Comprar",exchanges:"Exchanges suportadas",
      stake_title:"Stake Pro ‚Äî Trave, Ganhe, Receba NFT ‚ú®",stake_lead:"Trave seu ZUZU e ganhe <b>APY + BOOST NFT</b>.",
      token_title:"Tokenomics (Visualizado)",road_title:"Roteiro"},
  ru:{nav_presale:"–ü—Ä–µ–¥–ø—Ä–æ–¥–∞–∂–∞",nav_stake:"–°—Ç–µ–π–∫–∏–Ω–≥",nav_nft:"NFT –Ω–∞–≥—Ä–∞–¥—ã",nav_roadmap:"–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",nav_token:"–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞",connect:"–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª—ë–∫",
      hero_badge:"–ü—Ä–µ–¥–ø—Ä–æ–¥–∞–∂–∞ ‚Ä¢ –°—Ç–µ–π–∫–∏–Ω–≥ –¥–ª—è NFT",hero_title:"ZUZU ‚Äî –†–æ–±–æ-–Å–∂ ü¶î‚ö°",
      hero_lead:"–°—Ç–µ–π–∫–∞–π –∏ –ø–æ–ª—É—á–∞–π <b>–º–∞—Å–∫–æ—Ç NFT ZUZU</b>.",cta_stake:"–ù–∞—á–∞—Ç—å —Å—Ç–µ–π–∫–∏–Ω–≥",cta_nft:"NFT –Ω–∞–≥—Ä–∞–¥—ã",
      days:"–î–ù–ò",hours:"–ß–ê–°–´",mins:"–ú–ò–ù.",secs:"–°–ï–ö.",
      presale_title:"–ü—Ä–µ–¥–ø—Ä–æ–¥–∞–∂–∞ ‚Äî –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç",presale_lead:"–ì–æ—Ç–æ–≤—å—Å—è –∫ –ø—Ä–µ–¥–ø—Ä–æ–¥–∞–∂–µ ZUZU! <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∞–ª–ª–æ–∫–∞—Ü–∏—è</b>.",
      amount:"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (ZUZU)",cost:"–°—Ç–æ–∏–º–æ—Å—Ç—å:",buy:"–ö—É–ø–∏—Ç—å",exchanges:"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±–∏—Ä–∂–∏",
      stake_title:"Stake Pro ‚Äî –ó–∞–º–æ—Ä–æ–∑—å, –ó–∞—Ä–∞–±–æ—Ç–∞–π, –ü–æ–ª—É—á–∏ NFT ‚ú®",stake_lead:"–ó–∞–º–æ—Ä–æ–∑—å ZUZU –∏ –ø–æ–ª—É—á–∞–π <b>APY + NFT BOOST</b>.",
      token_title:"–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞ (–≤–∏–∑—É–∞–ª—å–Ω–æ)",road_title:"–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞"},
  es:{nav_presale:"Pre-venta",nav_stake:"Stake",nav_nft:"Recompensas NFT",nav_roadmap:"Hoja de ruta",nav_token:"Tokenomics",connect:"Conectar Billetera",
      hero_badge:"Pre-venta ‚Ä¢ Stake para ganar NFT",hero_title:"ZUZU ‚Äî Erizo Rob√≥tico ü¶î‚ö°",
      hero_lead:"Haz stake y gana <b>NFT Mascota ZUZU</b>.",cta_stake:"Empezar Stake",cta_nft:"Recompensas NFT",
      days:"D√çAS",hours:"HORAS",mins:"MINUTOS",secs:"SEGUNDOS",
      presale_title:"Pre-venta ‚Äî Cuenta regresiva",presale_lead:"¬°Prep√°rate para la pre-venta ZUZU! <b>Asignaci√≥n limitada</b>.",
      amount:"Cantidad (ZUZU)",cost:"Costo:",buy:"Comprar",exchanges:"Exchanges compatibles",
      stake_title:"Stake Pro ‚Äî Bloquea, Gana, Obt√©n NFT ‚ú®",stake_lead:"Bloquea tu ZUZU y gana <b>APY + BOOST NFT</b>.",
      token_title:"Tokenomics (Visualizado)",road_title:"Hoja de ruta"}
};

/* =============== tiny dom helpers =============== */
const $ = (q, root=document) => root.querySelector(q);
const $$= (q, root=document) => [...root.querySelectorAll(q)];

/* =============== Lang UI =============== */
function applyLang(lang){
  localStorage.setItem(CONFIG.LS_LANG, lang);
  const langCode = $("#langCode");
  if (langCode) langCode.textContent = lang.toUpperCase();
  const flag = $("#langFlag");
  if (flag) flag.src = `flags/${lang}.png`;
  document.querySelectorAll("[data-i]").forEach(el=>{
    const k=el.getAttribute("data-i");
    if(I[lang] && I[lang][k]) el.innerHTML=I[lang][k];
  });
}
(function initLang(){
  const saved = localStorage.getItem(CONFIG.LS_LANG) || "en";
  applyLang(saved);
  const langBtn  = $("#langBtn"), langMenu=$("#langMenu");
  if(langBtn && langMenu){
    langBtn.addEventListener("click", ()=>langMenu.classList.toggle("show"));
    $$(".lang-opt").forEach(b=>b.addEventListener("click", ()=>{
      applyLang(b.dataset.lang); langMenu.classList.remove("show");
    }));
    document.addEventListener("click", (e)=>{
      if(!langMenu.contains(e.target) && e.target!==langBtn) langMenu.classList.remove("show");
    });
  }
})();

/* =============== Countdown (persist) =============== */
function getLaunchAt(){
  let ts = localStorage.getItem(CONFIG.launchKey);
  if(!ts){ ts = new Date(CONFIG.defaultLaunchISO).getTime().toString(); localStorage.setItem(CONFIG.launchKey, ts); }
  return parseInt(ts,10);
}
function tick(){
  const left = Math.max(0, getLaunchAt() - Date.now());
  const d=Math.floor(left/86400000);
  const h=Math.floor((left%86400000)/3600000);
  const m=Math.floor((left%3600000)/60000);
  const s=Math.floor((left%60000)/1000);
  const pad=n=>n.toString().padStart(2,"0");
  $("#cdDays") && ($("#cdDays").textContent=pad(d));
  $("#cdHours") && ($("#cdHours").textContent=pad(h));
  $("#cdMins") && ($("#cdMins").textContent=pad(m));
  $("#cdSecs") && ($("#cdSecs").textContent=pad(s));
}
tick(); setInterval(tick,1000);

/* =============== Presale fiyat / maliyet =============== */
function updateCosts(){
  const inp = $("#buyAmount");
  const qty = parseFloat((inp?.value||"0").toString().replace(/[^\d.]/g,""))||0;
  CONFIG.weekPrices.forEach((p,i)=>{
    const priceEl = $("#p"+i), costEl = $("#c"+i);
    if(priceEl) priceEl.textContent = p.toFixed(4);
    if(costEl)  costEl.textContent = (qty*p).toLocaleString(undefined,{maximumFractionDigits:2});
  });
}
$("#buyAmount")?.addEventListener("input", updateCosts);
updateCosts();

/* =============== NFT grid =============== */
(function renderNFTs(){
  const g=$("#nftGrid"); if(!g) return;
  g.innerHTML = CONFIG.nfts.map(n=>`
    <div class="nft">
      <img src="assets/images/mask/${n.id}.png" alt="${n.name}" loading="lazy"
           onerror="this.style.display='none'">
      <div class="meta"><b>${n.name}</b><span class="tag">${n.rarity}</span></div>
    </div>`).join("");
})();

/* =============== Invite link =============== */
(function refLink(){
  const url = new URL(location.href);
  if(url.searchParams.get("ref")) localStorage.setItem("zuzu_refAddr", url.searchParams.get("ref"));
  const addr = localStorage.getItem("zuzu_refAddr") || "";
  const out = $("#refLink"); const copyBtn = $("#copyRef");
  if(out){ out.value = `${location.origin}${location.pathname}?ref=${addr||"YOURCODE"}`; }
  if(copyBtn){ copyBtn.addEventListener("click", ()=>{ navigator.clipboard.writeText(out.value); alert("Copied!"); }); }
})();

/* =========================
   Wallet Connect (Solana)
   - Phantom / Solflare / Backpack
   - Desktop: window provider √ºzerinden
   - Mobile: deeplink ile wallet i√ßinde siteyi a√ß
========================= */
const Wallets = {
  phantom:{
    key:'phantom', label:'Phantom', icon:'assets/images/wallets/phantom.png',
    has:()=>!!(window.solana && window.solana.isPhantom),
    connect:async()=>{ const r=await window.solana.connect({ onlyIfTrusted:false }); return r.publicKey.toString(); },
    disconnect:async()=>{ try{ await window.solana.disconnect?.(); }catch{} },
    deeplink:(url)=>`https://phantom.app/ul/browse/${encodeURIComponent(url)}?ref=zuzu&network=${encodeURIComponent(CONFIG.cluster)}`
  },
  solflare:{
    key:'solflare', label:'Solflare', icon:'assets/images/wallets/solflare.png',
    has:()=>!!(window.solflare && window.solflare.isSolflare),
    connect:async()=>{ const r=await window.solflare.connect(); return r.publicKey.toString(); },
    disconnect:async()=>{ try{ await window.solflare.disconnect?.(); }catch{} },
    deeplink:(url)=>`https://solflare.com/ul/v1/browse/${encodeURIComponent(url)}?ref=zuzu&network=${encodeURIComponent(CONFIG.cluster)}`
  },
  backpack:{
    key:'backpack', label:'Backpack', icon:'assets/images/wallets/backpack.png',
    has:()=>!!(window.backpack && window.backpack.isBackpack),
    connect:async()=>{ const r=await window.backpack.connect(); return r.publicKey.toString(); },
    disconnect:async()=>{ try{ await window.backpack.disconnect?.(); }catch{} },
    deeplink:(url)=>`https://backpack.app/ul/browse/${encodeURIComponent(url)}?network=${encodeURIComponent(CONFIG.cluster)}`
  }
};

let CURRENT_ADDRESS = null;
let CURRENT_WALLET  = null;

function walletListHTML(){
  return Object.values(Wallets).map(w=>`
    <button class="wbtn" data-key="${w.key}">
      <img src="${w.icon}" alt=""><span>${w.label}</span>
    </button>`).join("");
}

/* ----- modal lifecycle (otomatƒ±k a√ßƒ±lmayƒ± engelle) ----- */
(function initWalletModal(){
  const modal = $("#walletModal"); const list = $("#wlist");
  const btnConnect = $("#connectBtn"); const btnClose = $("#wmClose");
  const btnDisconnect = $("#disconnectBtn");
  if(!modal || !list || !btnConnect) return;

  list.innerHTML = walletListHTML();

  // Geri y√ºkle (adres/etiket)
  const savedAddr   = localStorage.getItem(CONFIG.LS_ADDR);
  const savedWallet = localStorage.getItem(CONFIG.LS_WALLET);
  if(savedAddr && savedWallet){
    CURRENT_ADDRESS = savedAddr;
    CURRENT_WALLET  = savedWallet;
    btnConnect.textContent = `${savedAddr.slice(0,6)}...${savedAddr.slice(-4)}`;
    btnDisconnect.style.display = "inline-flex";
  }

  // backdrop & esc
  modal.addEventListener("click", (e)=>{
    if(e.target === modal) modal.classList.remove("show");
  });
  btnClose?.addEventListener("click", ()=>modal.classList.remove("show"));
  document.addEventListener("keydown",(e)=>{ if(e.key==="Escape") modal.classList.remove("show"); });

  // connect button => √∂nce masa√ºst√º provider, yoksa modal
  btnConnect.addEventListener("click", async ()=>{
    // √ñnce hƒ±zlƒ± direct provider (masa√ºst√º)
    const direct = Wallets.phantom.has() ? Wallets.phantom :
                   (Wallets.solflare.has() ? Wallets.solflare :
                   (Wallets.backpack.has() ? Wallets.backpack : null));
    if(direct){
      await connectFlow(direct.key);
    }else{
      // Mobil/eklentisiz: sadece modal a√ß
      modal.classList.add("show");
    }
  });

  // list click
  list.addEventListener("click", async (e)=>{
    const btn = e.target.closest(".wbtn"); if(!btn) return;
    const key = btn.dataset.key;
    await connectFlow(key);
  });

  // disconnect
  btnDisconnect?.addEventListener("click", async ()=>{
    if(!CURRENT_WALLET) return;
    const impl = Wallets[CURRENT_WALLET];
    try{ await impl?.disconnect?.(); }catch{}
    CURRENT_WALLET = null; CURRENT_ADDRESS = null;
    localStorage.removeItem(CONFIG.LS_ADDR);
    localStorage.removeItem(CONFIG.LS_WALLET);
    $("#connectBtn").textContent = I[(localStorage.getItem(CONFIG.LS_LANG)||"en")].connect || "Connect Wallet";
    btnDisconnect.style.display = "none";
    alert("Disconnected.");
  });
})();

async function connectFlow(key){
  const impl = Wallets[key];
  const modal = $("#walletModal");
  const isMobile = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent);
  const nowUrl   = location.href;

  // Eƒüer eklenti yoksa ve mobilse: wallet i√ßinde siteyi a√ß
  if(!impl.has() && isMobile){
    window.open(impl.deeplink(nowUrl), "_blank");
    return;
  }

  // Baƒülanmayƒ± dener, iptal/hata yakalar
  try{
    const addr = await withTimeout(impl.connect(), 20000); // 20sn g√ºvenli zaman a≈üƒ±mƒ±
    onConnected(key, addr);
    modal?.classList.remove("show");
  }catch(err){
    // Kullanƒ±cƒ± iptal etmi≈ü olabilir, timeout olabilir, ger√ßek hata olabilir
    console.warn("wallet connect failed:", err);
    // Eƒüer hi√ß provider yoksa ve desktop ise kullanƒ±cƒ±ya modal g√∂ster.
    if(!impl.has()){
      modal?.classList.add("show");
      alert("Wallet provider not found. Please install or open on mobile wallet.");
    }else{
      alert("Wallet connection rejected or failed.");
    }
  }
}

function onConnected(key, addr){
  CURRENT_ADDRESS = addr;
  CURRENT_WALLET  = key;
  localStorage.setItem(CONFIG.LS_ADDR, addr);
  localStorage.setItem(CONFIG.LS_WALLET, key);
  const btnConnect = $("#connectBtn");
  if(btnConnect) btnConnect.textContent = `${addr.slice(0,6)}...${addr.slice(-4)}`;
  const btnDisconnect = $("#disconnectBtn");
  if(btnDisconnect) btnDisconnect.style.display = "inline-flex";
  // Referans linki otomatik g√ºncelle
  const out = $("#refLink");
  if(out) out.value = `${location.origin}${location.pathname}?ref=${addr}`;
}

function withTimeout(promise, ms){
  return new Promise((resolve,reject)=>{
    const t = setTimeout(()=>reject(new Error("timeout")), ms);
    promise.then(v=>{ clearTimeout(t); resolve(v); }, e=>{ clearTimeout(t); reject(e); });
  });
}

/* =============== Satƒ±n alma (SOL / USDT on Solana) ‚Äî stub akƒ±≈ü =============== */
/* Not:
   - SOL se√ßilirse: Phantom transfer deeplink ile transfer ekranƒ±na gider (desktop: provider, mobile: app).
   - USDT se√ßilirse: SPL-Token i≈ülem entegrasyonu eklenecek (ATA + transfer).
*/
function activeWeek(){ return 0; } // ƒ∞stersen tarih bazlƒ± hale getiririz.

["buyW0","buyW1","buyW2","buyW3"].forEach((id,i)=>{
  const b = $("#"+id); if(!b) return;
  b.addEventListener("click", ()=>handleBuy(i));
});

function handleBuy(weekIdx){
  const qty = parseFloat(($("#buyAmount")?.value||"0").toString().replace(/[^\d.]/g,""))||0;
  if(qty<=0){ alert("Ge√ßerli miktar gir."); return; }

  const aw = activeWeek();
  if(weekIdx!==aw){ alert("Bu hafta aktif deƒüil."); return; }

  if(!CURRENT_ADDRESS){ alert("√ñnce c√ºzdan baƒüla (Phantom / Solflare / Backpack)."); return; }

  const price = CONFIG.weekPrices[weekIdx];
  const usdtCost = qty * price; // USDT

  if(!CONFIG.treasury || CONFIG.treasury.startsWith("FILL_")){
    alert("Treasury adresi tanƒ±mlƒ± deƒüil. L√ºtfen script.js i√ßindeki CONFIG.treasury alanƒ±nƒ± doldur.");
    return;
  }

  const payWith = $("#payWith").value;

  if(payWith==="SOL"){
    // √ñRNEK oran: 1 USDT ‚âà 0.01 SOL (placeholder). Ger√ßek kur eklenecek.
    const solAmount = (usdtCost * 0.01).toFixed(4);
    // Phantom deeplink (desktop‚Äôta da yeni sekme)
    const deeplink = `https://phantom.app/ul/transfer?recipient=${encodeURIComponent(CONFIG.treasury)}&amount=${solAmount}&reference=${encodeURIComponent(CURRENT_ADDRESS)}&network=${encodeURIComponent(CONFIG.cluster)}`;
    window.open(deeplink, "_blank");
    alert(`Phantom a√ßƒ±lacak. ~${solAmount} SOL g√∂nderiyorsun.\n(Oran √∂rnek; ger√ßek kur entegrasyonu eklenecek.)`);
  }else{
    alert("USDT (Solana) transferi i√ßin SPL-Token i≈ülem entegrasyonu eklenecek.");
  }
}

/* =============== k√º√ß√ºk dokunu≈ülar =============== */
// ticker g√∂r√ºn√ºrl√ºƒü√ºn√º tetikle
(function ensureTickerVisible(){
  const t=$("#exTrack"); if(!t) return;
  t.style.transform="translateX(0)"; setTimeout(()=>t.style.transform="", 60);
})();
